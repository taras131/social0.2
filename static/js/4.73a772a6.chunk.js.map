{"version":3,"sources":["components/login/loginform/Login.module.css","components/login/loginform/LoginForm.jsx","components/login/Login.jsx"],"names":["module","exports","maxLength30","maxLength","Input","TEXTAREAINPUT","reduxForm","form","props","isAuthentications","onClick","loginOut","onSubmit","handleSubmit","Field","placeholder","component","name","validate","requiredField","type","className","style","error","connect","state","authenticationsInformation","login","to","formData","console","log"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,MAAQ,uB,8GCKpBC,EAAcC,YAAU,IACxBC,EAAQC,YAAc,SAiCbC,cAAU,CAACC,KAAM,SAAjBD,EAhCG,SAACE,GAIf,OACI,8BACKA,EAAMC,kBACC,wBAAQC,QANP,WACbF,EAAMG,YAKM,4CACH,uBAAMC,SAAUJ,EAAMK,aAAtB,UACG,8BACI,cAACC,EAAA,EAAD,CAAOC,YAAa,iCAASC,UAAaZ,EAAOa,KAAM,QAChDC,SAAY,CAACC,IAAejB,OAEvC,8BACI,cAACY,EAAA,EAAD,CAAOC,YAAa,uCAAUC,UAAaZ,EAAOa,KAAM,WACjDC,SAAY,CAACC,IAAejB,OAEvC,gCACI,cAACY,EAAA,EAAD,CAAOM,KAAM,WAAYJ,UAAa,QAASC,KAAM,eADzD,0EAGA,qBAAKI,UAAWC,IAAMC,MAAtB,SACKf,EAAMe,QAEX,8BACI,8E,wBCHTC,uBANS,SAACC,GACrB,MAAO,CACHhB,kBAAmBgB,EAAMC,2BAA2BjB,qBAIpB,CAACkB,UAAOhB,cAAjCa,EAtBD,SAAChB,GAKX,OAAGA,EAAMC,kBACE,cAAC,IAAD,CAAUmB,GAAI,cAGrB,gCACI,gJACA,cAAC,EAAD,CAAWhB,SAVF,SAACiB,GACdC,QAAQC,IAAIF,GACZrB,EAAMmB,MAAME,IAQuBpB,kBAAqBD,EAAMC,kBAC/CE,SAAWH,EAAMG","file":"static/js/4.73a772a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Login_error__3XTNd\"};","import {Field, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {TEXTAREAINPUT} from \"../../common/formcontrol/FormControl\";\r\nimport {maxLength, requiredField} from \"../../../utils/validations/validations\";\r\nimport style from \"./Login.module.css\";\r\n\r\nconst maxLength30 = maxLength(30);\r\nconst Input = TEXTAREAINPUT(\"input\");\r\nconst LoginForm = (props) => {\r\n    const loginOut = () => {\r\n        props.loginOut();\r\n    }\r\n    return(\r\n        <div>\r\n            {props.isAuthentications\r\n                ?   <button onClick={loginOut}>Выйти</button>\r\n                :<form onSubmit={props.handleSubmit}>\r\n                    <div>\r\n                        <Field placeholder={\"Логин\"} component = {Input} name={\"login\"}\r\n                               validate = {[requiredField, maxLength30]}/>\r\n                    </div>\r\n                    <div>\r\n                        <Field placeholder={\"Пароль\"} component = {Input} name={\"password\"}\r\n                               validate = {[requiredField, maxLength30]}/>\r\n                    </div>\r\n                    <div>\r\n                        <Field type={\"checkbox\"} component = {\"input\"} name={\"rememberMe\"}/> Запомни меня\r\n                    </div>\r\n                    <div className={style.error}>\r\n                        {props.error}\r\n                    </div>\r\n                    <div>\r\n                        <button>Войти</button>\r\n                    </div>\r\n                </form>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: \"login\"})(LoginForm);","import LoginForm from \"./loginform/LoginForm\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, loginOut} from \"../../redux/authenticationsReducer\";\r\nimport React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        console.log(formData)\r\n        props.login(formData);\r\n    }\r\n    if(props.isAuthentications){\r\n        return <Redirect to =\"/profile/\" />\r\n    }\r\n    return(\r\n        <div>\r\n            <h1>Тут будем логиниться</h1>\r\n            <LoginForm onSubmit={onSubmit} isAuthentications = {props.isAuthentications}\r\n                       loginOut ={props.loginOut} />\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthentications: state.authenticationsInformation.isAuthentications\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {login, loginOut})(Login);"],"sourceRoot":""}